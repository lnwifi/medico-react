// Base de datos de emergencias cr√≠ticas pedi√°tricas - Argentina
const emergenciasDB = {
    paro: {
        nombre: "Paro Cardiorrespiratorio Pedi√°trico",
        descripcion: "Protocolo de RCP pedi√°trico seg√∫n gu√≠as internacionales",
        icon: "üÜò",
        urgencia: "critica",
        tiempoLimite: "Iniciar inmediatamente",
        
        reconocimiento: {
            titulo: "Reconocimiento del Paro",
            signos: [
                "P√©rdida de conciencia",
                "Ausencia de respiraci√≥n o gasping",
                "Ausencia de pulso central (>10 segundos)",
                "Cianosis o palidez extrema"
            ]
        },
        
        protocolo: {
            secuencia: [
                {
                    paso: 1,
                    titulo: "Verificar Respuesta",
                    acciones: [
                        "Estimular al ni√±o (palmadas en los hombros)",
                        "Gritar: '¬øEst√°s bien?'",
                        "Si no responde ‚Üí activar emergencias"
                    ],
                    tiempo: "5-10 segundos"
                },
                {
                    paso: 2,
                    titulo: "Activar Sistema de Emergencias",
                    acciones: [
                        "Llamar al 107 (SAME)",
                        "Solicitar DEA si disponible",
                        "Si hay 2 rescatistas: uno llama, otro inicia RCP"
                    ],
                    tiempo: "Inmediato"
                },
                {
                    paso: 3,
                    titulo: "Posicionamiento",
                    acciones: [
                        "Superficie firme y plana",
                        "Hiperextensi√≥n leve del cuello",
                        "Posici√≥n de manos seg√∫n edad"
                    ],
                    detalles: {
                        "Lactantes (<1 a√±o)": "2 dedos en estern√≥n inferior",
                        "Ni√±os (1-8 a√±os)": "Tal√≥n de una mano",
                        "Adolescentes (>8 a√±os)": "Ambas manos entrelazadas"
                    }
                },
                {
                    paso: 4,
                    titulo: "Compresiones Tor√°cicas",
                    acciones: [
                        "Frecuencia: 100-120 por minuto",
                        "Profundidad: 1/3 del di√°metro tor√°cico",
                        "Permitir reexpansi√≥n completa",
                        "Minimizar interrupciones"
                    ],
                    profundidad: {
                        "Lactantes": "4 cm",
                        "Ni√±os": "5 cm",
                        "Adolescentes": "5-6 cm"
                    }
                },
                {
                    paso: 5,
                    titulo: "Ventilaci√≥n",
                    acciones: [
                        "Relaci√≥n: 30 compresiones : 2 ventilaciones",
                        "Si no entrenado: solo compresiones",
                        "Bolsa-v√°lvula-m√°scara si disponible",
                        "Ventilaciones de 1 segundo c/u"
                    ]
                },
                {
                    paso: 6,
                    titulo: "Ciclos de RCP",
                    acciones: [
                        "Continuar 30:2 por 2 minutos",
                        "Reevaluar pulso cada 2 minutos",
                        "Cambiar reanimador cada 2 minutos",
                        "No interrumpir hasta llegada del SAME"
                    ]
                }
            ]
        },
        
        medicamentos: {
            adrenalina: {
                dosis: "0.01 mg/kg (0.1 ml/kg de sol 1:10.000)",
                via: "Intravenosa o intra√≥sea",
                repetir: "Cada 3-5 minutos",
                maxima: "1 mg por dosis"
            },
            amiodarona: {
                dosis: "5 mg/kg",
                via: "IV/IO",
                indicacion: "Fibrilaci√≥n ventricular/Taquicardia ventricular"
            }
        },
        
        causasReversibles: [
            "Hipovolemia ‚Üí Fluidos IV",
            "Hipoxia ‚Üí Ventilaci√≥n/Ox√≠geno", 
            "Acidosis ‚Üí Bicarbonato si pH <7.1",
            "Hipotermia ‚Üí Recalentamiento",
            "Hipoglucemia ‚Üí Dextrosa 25% 2ml/kg",
            "Hiperkaliemia ‚Üí Calcio + Insulina",
            "Toxinas ‚Üí Ant√≠dotos espec√≠ficos",
            "Neumot√≥rax ‚Üí Descompresi√≥n",
            "Taponamiento ‚Üí Pericardiocentesis",
            "Trombosis ‚Üí Trombol√≠ticos"
        ]
    },

    anafilaxia: {
        nombre: "Anafilaxia",
        descripcion: "Reacci√≥n al√©rgica severa que amenaza la vida",
        icon: "‚ö†Ô∏è",
        urgencia: "critica",
        tiempoLimite: "Tratar en <5 minutos",
        
        reconocimiento: {
            titulo: "Criterios Diagn√≥sticos",
            criterios: [
                "Inicio agudo (minutos-horas) con compromiso de ‚â•2 sistemas",
                "Compromiso respiratorio + cut√°neo + cardiovascular",
                "Hipotensi√≥n tras exposici√≥n a al√©rgeno conocido"
            ],
            sintomas: {
                cutaneos: ["Urticaria generalizada", "Angioedema", "Prurito", "Eritema"],
                respiratorios: ["Broncoespasmo", "Estridor", "Disfonia", "Disnea"],
                cardiovasculares: ["Hipotensi√≥n", "Taquicardia", "Shock", "Mareos"],
                gastrointestinales: ["V√≥mitos", "Diarrea", "Calambres abdominales"]
            }
        },
        
        protocolo: {
            inmediato: [
                {
                    paso: 1,
                    titulo: "Evaluaci√≥n R√°pida",
                    acciones: [
                        "ABC: V√≠a a√©rea, respiraci√≥n, circulaci√≥n",
                        "Retirar al√©rgeno si es posible",
                        "Posici√≥n: acostado con piernas elevadas",
                        "Monitoreo continuo"
                    ]
                },
                {
                    paso: 2,
                    titulo: "Adrenalina INMEDIATA",
                    acciones: [
                        "Adrenalina 1:1000 intramuscular",
                        "Dosis: 0.01 mg/kg (m√°x 0.5mg)",
                        "Sitio: cara anterolateral del muslo",
                        "Repetir cada 5-15 min si necesario"
                    ],
                    dosis_edad: {
                        "6m-6a√±os": "0.15 mg (0.15 ml)",
                        "6-12a√±os": "0.3 mg (0.3 ml)", 
                        ">12a√±os": "0.5 mg (0.5 ml)"
                    }
                },
                {
                    paso: 3,
                    titulo: "Ox√≠geno y Acceso Venoso",
                    acciones: [
                        "Ox√≠geno al 100%",
                        "Acceso venoso (2 v√≠as si shock)",
                        "Soluci√≥n salina 20ml/kg bolo",
                        "Repetir fluidos seg√∫n respuesta"
                    ]
                },
                {
                    paso: 4,
                    titulo: "Medicaci√≥n Adjunta",
                    acciones: [
                        "Hidrocortisona 5mg/kg IV (m√°x 200mg)",
                        "Difenhidramina 1mg/kg IV (m√°x 50mg)",
                        "Si broncoespasmo: Salbutamol nebulizado",
                        "Ranitidina 1mg/kg IV (m√°x 50mg)"
                    ]
                }
            ]
        },
        
        tratamiento_refractario: {
            titulo: "Anafilaxia Refractaria",
            criterios: ["No respuesta a 2-3 dosis de adrenalina", "Shock persistente"],
            medidas: [
                "Infusi√≥n de adrenalina: 0.1-1 mcg/kg/min",
                "Vasopresina: 0.0003 U/kg IV",
                "Glucag√≥n: 1-5 mg IV (si toma betabloqueantes)",
                "Soporte inotr√≥pico",
                "Intubaci√≥n si compromiso severo"
            ]
        },
        
        alta_observacion: {
            criterios_alta: [
                "Estabilidad hemodin√°mica >4-6 horas",
                "S√≠ntomas resueltos completamente",
                "Acceso garantizado a adrenalina autoinyectable"
            ],
            plan_alta: [
                "Adrenalina autoinyectable (EpiPen)",
                "Prednisona 1mg/kg/d√≠a x 3 d√≠as",
                "Antihistam√≠nicos H1 y H2",
                "Plan de acci√≥n por escrito",
                "Derivaci√≥n a alergolog√≠a"
            ]
        }
    },

    status_epilepticus: {
        nombre: "Status Epil√©ptico",
        descripcion: "Convulsi√≥n >5 minutos o convulsiones recurrentes sin recuperaci√≥n",
        icon: "üß†",
        urgencia: "critica",
        tiempoLimite: "Tratar en <5 minutos",
        
        definicion: {
            operacional: "Convulsi√≥n >5 minutos",
            establecido: "Convulsi√≥n >30 minutos",
            refractario: "Contin√∫a despu√©s de 2 antiepil√©pticos"
        },
        
        protocolo: {
            timeline: [
                {
                    tiempo: "0-5 minutos",
                    titulo: "Estabilizaci√≥n Inicial",
                    acciones: [
                        "ABC: asegurar v√≠a a√©rea",
                        "Posici√≥n lateral de seguridad",
                        "Ox√≠geno suplementario",
                        "Monitoreo saturaci√≥n",
                        "Acceso venoso (no retrasar tratamiento)",
                        "Glicemia capilar"
                    ]
                },
                {
                    tiempo: "5-10 minutos",
                    titulo: "Primera L√≠nea",
                    medicamentos: [
                        {
                            farmaco: "Diazepam IV",
                            dosis: "0.2-0.3 mg/kg (m√°x 10mg)",
                            alternativa: "Diazepam rectal 0.5 mg/kg"
                        },
                        {
                            farmaco: "Lorazepam IV",
                            dosis: "0.1 mg/kg (m√°x 4mg)",
                            preferido: "M√°s efectivo que diazepam"
                        },
                        {
                            farmaco: "Midazolam IM",
                            dosis: "0.2 mg/kg (m√°x 10mg)",
                            indicacion: "Si no hay acceso IV"
                        }
                    ]
                },
                {
                    tiempo: "10-20 minutos",
                    titulo: "Segunda L√≠nea",
                    medicamentos: [
                        {
                            farmaco: "Fenito√≠na IV",
                            dosis: "20 mg/kg en 20 minutos",
                            concentracion: "‚â§1 mg/kg/min",
                            monitoreo: "ECG continuo"
                        },
                        {
                            farmaco: "Valproato IV",
                            dosis: "20-40 mg/kg en 10 minutos",
                            alternativa: "Si contraindicaci√≥n a fenito√≠na"
                        },
                        {
                            farmaco: "Levetiracetam IV",
                            dosis: "20-60 mg/kg en 15 minutos",
                            ventaja: "Menos efectos adversos"
                        }
                    ]
                },
                {
                    tiempo: ">20 minutos",
                    titulo: "Status Refractario",
                    medidas: [
                        "Considerar intubaci√≥n",
                        "Traslado a UCI pedi√°trica",
                        "Midazolam infusi√≥n 0.2 mg/kg + 0.05-2 mg/kg/h",
                        "Propofol infusi√≥n 1-2 mg/kg + 2-10 mg/kg/h",
                        "EEG continuo",
                        "Investigar causa subyacente"
                    ]
                }
            ]
        },
        
        causas_investigar: [
            "Infecciones (meningitis, encefalitis)",
            "Metab√≥licas (hipoglucemia, hiponatremia)",
            "T√≥xicas (intoxicaciones)",
            "Traum√°ticas (hematoma intracraneal)",
            "Vasculares (ACV pedi√°trico)",
            "Epilepsia conocida (no adherencia)"
        ],
        
        complicaciones: [
            "Hipertermia ‚Üí Medidas de enfriamiento",
            "Acidosis ‚Üí Bicarbonato si pH <7.1",
            "Hipotensi√≥n ‚Üí Fluidos, vasopresores",
            "Hipoxemia ‚Üí Intubaci√≥n",
            "Rabdomi√≥lisis ‚Üí Hidrataci√≥n, vigilar funci√≥n renal"
        ]
    },

    trauma: {
        nombre: "Trauma Mayor Pedi√°trico",
        descripcion: "Evaluaci√≥n inicial sistem√°tica del trauma pedi√°trico",
        icon: "ü©π",
        urgencia: "alta",
        tiempoLimite: "Evaluaci√≥n en <10 minutos",
        
        evaluacion_primaria: {
            titulo: "ABCDE del Trauma Pedi√°trico",
            secuencia: [
                {
                    letra: "A",
                    area: "V√≠a A√©rea con Control Cervical",
                    evaluacion: [
                        "Permeabilidad de v√≠a a√©rea",
                        "Inmovilizaci√≥n cervical",
                        "Buscar cuerpos extra√±os",
                        "Evaluar lesiones faciales"
                    ],
                    acciones: [
                        "Collar√≠n cervical adecuado para la edad",
                        "Aspiraci√≥n suave si necesario",
                        "Intubaci√≥n si GCS <8 o compromiso severo",
                        "Cricotiroidotom√≠a contraindicada <12 a√±os"
                    ]
                },
                {
                    letra: "B",
                    area: "Respiraci√≥n y Ventilaci√≥n",
                    evaluacion: [
                        "Frecuencia respiratoria",
                        "Movimientos tor√°cicos sim√©tricos",
                        "Saturaci√≥n de ox√≠geno",
                        "Auscultaci√≥n bilateral"
                    ],
                    acciones: [
                        "Ox√≠geno suplementario",
                        "Ventilaci√≥n asistida si necesario",
                        "Descompresi√≥n de neumot√≥rax",
                        "Toracostom√≠a si indicada"
                    ]
                },
                {
                    letra: "C",
                    area: "Circulaci√≥n con Control de Hemorragias",
                    evaluacion: [
                        "Pulso central y perif√©rico",
                        "Presi√≥n arterial",
                        "Tiempo de llenado capilar",
                        "Hemorragias externas"
                    ],
                    acciones: [
                        "Control directo de hemorragias",
                        "2 accesos venosos de grueso calibre",
                        "Soluci√≥n salina 20ml/kg bolo",
                        "Considerar sangre si no respuesta"
                    ]
                },
                {
                    letra: "D",
                    area: "D√©ficit Neurol√≥gico",
                    evaluacion: [
                        "Escala de Coma de Glasgow",
                        "Pupilas (tama√±o, reactividad)",
                        "Movimientos de extremidades",
                        "Nivel de conciencia"
                    ],
                    acciones: [
                        "Mantener PPC >40 mmHg",
                        "Manitol 0.25-1 g/kg si herniaci√≥n",
                        "Soluci√≥n salina hipert√≥nica",
                        "TC cerebral urgente"
                    ]
                },
                {
                    letra: "E",
                    area: "Exposici√≥n y Control T√©rmico",
                    evaluacion: [
                        "Examen corporal completo",
                        "Buscar lesiones ocultas",
                        "Evaluar temperatura corporal"
                    ],
                    acciones: [
                        "Desnudar completamente",
                        "Prevenir hipotermia",
                        "Mantas t√©rmicas",
                        "Soluciones tibias"
                    ]
                }
            ]
        },
        
        escalas_pediatricas: {
            glasgow_pediatrico: {
                "Apertura ocular": {
                    "4": "Espont√°nea",
                    "3": "Al comando verbal",
                    "2": "Al dolor",
                    "1": "Sin respuesta"
                },
                "Respuesta verbal (>2 a√±os)": {
                    "5": "Orientado, apropiado",
                    "4": "Confuso",
                    "3": "Palabras inapropiadas",
                    "2": "Sonidos incomprensibles",
                    "1": "Sin respuesta"
                },
                "Respuesta verbal (<2 a√±os)": {
                    "5": "Sonr√≠e, balbucea",
                    "4": "Llora, se consuela",
                    "3": "Llora inadecuadamente",
                    "2": "Gru√±idos",
                    "1": "Sin respuesta"
                },
                "Respuesta motora": {
                    "6": "Obedece comandos",
                    "5": "Localiza dolor",
                    "4": "Retira al dolor",
                    "3": "Flexi√≥n anormal",
                    "2": "Extensi√≥n anormal",
                    "1": "Sin respuesta"
                }
            }
        },
        
        signos_alarma: [
            "GCS <8 o deterioro progresivo",
            "Shock que no responde a fluidos",
            "Distensi√≥n abdominal progresiva",
            "Hematuria macrosc√≥pica",
            "Fracturas femorales bilaterales",
            "Lesiones por mecanismo de alta energ√≠a"
        ],
        
        consideraciones_pediatricas: [
            "Mayor superficie corporal ‚Üí p√©rdida cal√≥rica",
            "Menor volumen sangu√≠neo ‚Üí shock r√°pido",
            "Cart√≠lagos flexibles ‚Üí lesiones internas sin fractura",
            "Cabeza proporcionalmente grande ‚Üí TCE frecuente",
            "Esqueleto inmaduro ‚Üí fracturas en tallo verde"
        ]
    }
};

// Funci√≥n para obtener emergencia espec√≠fica
function obtenerEmergencia(tipo) {
    return emergenciasDB[tipo] || null;
}

// Funci√≥n actualizada para mostrar emergencias
function mostrarEmergencia(tipo) {
    const emergencia = obtenerEmergencia(tipo);
    const detalle = document.getElementById('emergencia-detalle');
    
    if (!emergencia) {
        detalle.innerHTML = '<p>Emergencia no encontrada</p>';
        detalle.style.display = 'block';
        return;
    }
    
    let html = `
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
            <h3>${emergencia.icon} ${emergencia.nombre}</h3>
            <button onclick="cerrarEmergencia()" style="background: #f44336; color: white; border: none; padding: 0.5rem 1rem; border-radius: 5px; cursor: pointer;">‚úï Cerrar</button>
        </div>
        <p><em>${emergencia.descripcion}</em></p>
        <div class="alerta peligro">
            <p><strong>‚è∞ Tiempo l√≠mite:</strong> ${emergencia.tiempoLimite}</p>
            <p><strong>üö® Urgencia:</strong> ${emergencia.urgencia.toUpperCase()}</p>
        </div>
    `;
    
    // Reconocimiento/Definici√≥n
    if (emergencia.reconocimiento) {
        html += `
            <div class="paso">
                <h4>üîç ${emergencia.reconocimiento.titulo}</h4>
                ${emergencia.reconocimiento.signos ? `
                    <ul>
                        ${emergencia.reconocimiento.signos.map(signo => `<li>${signo}</li>`).join('')}
                    </ul>
                ` : ''}
                ${emergencia.reconocimiento.criterios ? `
                    <ul>
                        ${emergencia.reconocimiento.criterios.map(criterio => `<li>${criterio}</li>`).join('')}
                    </ul>
                ` : ''}
                ${emergencia.reconocimiento.sintomas ? `
                    ${Object.entries(emergencia.reconocimiento.sintomas).map(([sistema, sintomas]) => `
                        <div style="margin: 0.5rem 0;">
                            <strong>${sistema}:</strong> ${sintomas.join(', ')}
                        </div>
                    `).join('')}
                ` : ''}
            </div>
        `;
    }
    
    if (emergencia.definicion) {
        html += `
            <div class="paso">
                <h4>üìö Definiciones</h4>
                ${Object.entries(emergencia.definicion).map(([tipo, def]) => `
                    <p><strong>${tipo}:</strong> ${def}</p>
                `).join('')}
            </div>
        `;
    }
    
    // Protocolo principal
    if (emergencia.protocolo) {
        html += '<div class="protocolo-emergencia"><h4>üöë Protocolo de Actuaci√≥n</h4>';
        
        if (emergencia.protocolo.secuencia) {
            emergencia.protocolo.secuencia.forEach(paso => {
                html += `
                    <div class="paso-emergencia">
                        <h5>Paso ${paso.paso}: ${paso.titulo}</h5>
                        ${paso.tiempo ? `<p><strong>‚è±Ô∏è Tiempo:</strong> ${paso.tiempo}</p>` : ''}
                        <ul>
                            ${paso.acciones.map(accion => `<li>${accion}</li>`).join('')}
                        </ul>
                        ${paso.detalles ? `
                            <div style="background: #f0f8ff; padding: 0.5rem; border-radius: 5px; margin: 0.5rem 0;">
                                <strong>Detalles por edad:</strong>
                                ${Object.entries(paso.detalles).map(([edad, detalle]) => `
                                    <br><em>${edad}:</em> ${detalle}
                                `).join('')}
                            </div>
                        ` : ''}
                        ${paso.profundidad ? `
                            <div style="background: #fff3e0; padding: 0.5rem; border-radius: 5px; margin: 0.5rem 0;">
                                <strong>Profundidad de compresi√≥n:</strong>
                                ${Object.entries(paso.profundidad).map(([edad, prof]) => `
                                    <br><em>${edad}:</em> ${prof}
                                `).join('')}
                            </div>
                        ` : ''}
                        ${paso.dosis_edad ? `
                            <div style="background: #e8f5e8; padding: 0.5rem; border-radius: 5px; margin: 0.5rem 0;">
                                <strong>Dosis por edad:</strong>
                                ${Object.entries(paso.dosis_edad).map(([edad, dosis]) => `
                                    <br><em>${edad}:</em> ${dosis}
                                `).join('')}
                            </div>
                        ` : ''}
                    </div>
                `;
            });
        }
        
        if (emergencia.protocolo.timeline) {
            emergencia.protocolo.timeline.forEach(fase => {
                html += `
                    <div class="paso-emergencia">
                        <h5>‚è∞ ${fase.tiempo}: ${fase.titulo}</h5>
                        ${fase.acciones ? `
                            <ul>
                                ${fase.acciones.map(accion => `<li>${accion}</li>`).join('')}
                            </ul>
                        ` : ''}
                        ${fase.medicamentos ? `
                            <div style="background: #e8f5e8; padding: 1rem; border-radius: 8px; margin: 0.5rem 0;">
                                <strong>üíä Medicamentos:</strong>
                                ${fase.medicamentos.map(med => `
                                    <div style="margin: 0.5rem 0; padding: 0.5rem; background: white; border-radius: 5px;">
                                        <strong>${med.farmaco}:</strong> ${med.dosis}<br>
                                        ${med.via ? `<em>V√≠a:</em> ${med.via}<br>` : ''}
                                        ${med.alternativa ? `<em>Alternativa:</em> ${med.alternativa}<br>` : ''}
                                        ${med.preferido ? `<em>üí° ${med.preferido}</em><br>` : ''}
                                        ${med.indicacion ? `<em>Indicaci√≥n:</em> ${med.indicacion}` : ''}
                                    </div>
                                `).join('')}
                            </div>
                        ` : ''}
                        ${fase.medidas ? `
                            <ul>
                                ${fase.medidas.map(medida => `<li>${medida}</li>`).join('')}
                            </ul>
                        ` : ''}
                    </div>
                `;
            });
        }
        
        if (emergencia.protocolo.inmediato) {
            emergencia.protocolo.inmediato.forEach(fase => {
                html += `
                    <div class="paso-emergencia">
                        <h5>Paso ${fase.paso}: ${fase.titulo}</h5>
                        <ul>
                            ${fase.acciones.map(accion => `<li>${accion}</li>`).join('')}
                        </ul>
                        ${fase.dosis_edad ? `
                            <div style="background: #e8f5e8; padding: 0.5rem; border-radius: 5px; margin: 0.5rem 0;">
                                <strong>Dosis por edad:</strong>
                                ${Object.entries(fase.dosis_edad).map(([edad, dosis]) => `
                                    <br><em>${edad}:</em> ${dosis}
                                `).join('')}
                            </div>
                        ` : ''}
                    </div>
                `;
            });
        }
        
        html += '</div>';
    }
    
    // Evaluaci√≥n primaria (para trauma)
    if (emergencia.evaluacion_primaria) {
        html += `
            <div class="paso">
                <h4>üîç ${emergencia.evaluacion_primaria.titulo}</h4>
                ${emergencia.evaluacion_primaria.secuencia.map(item => `
                    <div style="background: #f8f9fa; padding: 1rem; margin: 0.5rem 0; border-radius: 8px; border-left: 4px solid #2196f3;">
                        <h6>${item.letra}. ${item.area}</h6>
                        <div style="margin: 0.5rem 0;">
                            <strong>Evaluaci√≥n:</strong>
                            <ul>
                                ${item.evaluacion.map(eval => `<li>${eval}</li>`).join('')}
                            </ul>
                        </div>
                        <div style="margin: 0.5rem 0;">
                            <strong>Acciones:</strong>
                            <ul>
                                ${item.acciones.map(accion => `<li>${accion}</li>`).join('')}
                            </ul>
                        </div>
                    </div>
                `).join('')}
            </div>
        `;
    }
    
    // Medicamentos
    if (emergencia.medicamentos) {
        html += `
            <div class="paso">
                <h4>üíä Medicamentos de Emergencia</h4>
                ${Object.entries(emergencia.medicamentos).map(([med, info]) => `
                    <div style="background: #e8f5e8; padding: 1rem; margin: 0.5rem 0; border-radius: 8px;">
                        <strong>${med.charAt(0).toUpperCase() + med.slice(1)}:</strong><br>
                        <em>Dosis:</em> ${info.dosis}<br>
                        <em>V√≠a:</em> ${info.via}<br>
                        ${info.repetir ? `<em>Repetir:</em> ${info.repetir}<br>` : ''}
                        ${info.maxima ? `<em>Dosis m√°xima:</em> ${info.maxima}<br>` : ''}
                        ${info.indicacion ? `<em>Indicaci√≥n:</em> ${info.indicacion}` : ''}
                    </div>
                `).join('')}
            </div>
        `;
    }
    
    // Informaci√≥n adicional
    if (emergencia.causasReversibles) {
        html += `
            <div class="alerta">
                <h4>üîÑ Causas Reversibles (4H + 4T)</h4>
                <ul>
                    ${emergencia.causasReversibles.map(causa => `<li>${causa}</li>`).join('')}
                </ul>
            </div>
        `;
    }
    
    if (emergencia.tratamiento_refractario) {
        html += `
            <div class="alerta peligro">
                <h4>‚ö†Ô∏è ${emergencia.tratamiento_refractario.titulo}</h4>
                <p><strong>Criterios:</strong> ${emergencia.tratamiento_refractario.criterios.join(', ')}</p>
                <ul>
                    ${emergencia.tratamiento_refractario.medidas.map(medida => `<li>${medida}</li>`).join('')}
                </ul>
            </div>
        `;
    }
    
    if (emergencia.signos_alarma) {
        html += `
            <div class="alerta peligro">
                <h4>üö® Signos de Alarma</h4>
                <ul>
                    ${emergencia.signos_alarma.map(signo => `<li>${signo}</li>`).join('')}
                </ul>
            </div>
        `;
    }
    
    if (emergencia.consideraciones_pediatricas) {
        html += `
            <div class="paso">
                <h4>üë∂ Consideraciones Pedi√°tricas</h4>
                <ul>
                    ${emergencia.consideraciones_pediatricas.map(consideracion => `<li>${consideracion}</li>`).join('')}
                </ul>
            </div>
        `;
    }
    
    detalle.innerHTML = html;
    detalle.style.display = 'block';
    detalle.scrollIntoView({ behavior: 'smooth' });
}

function cerrarEmergencia() {
    const detalle = document.getElementById('emergencia-detalle');
    detalle.style.display = 'none';
}

// Funci√≥n para b√∫squeda r√°pida de emergencias
function busquedaRapidaEmergencia(sintomas) {
    const sintomasLower = sintomas.toLowerCase();
    const emergenciasEncontradas = [];
    
    Object.keys(emergenciasDB).forEach(key => {
        const emergencia = emergenciasDB[key];
        
        // Buscar en nombre y descripci√≥n
        if (emergencia.nombre.toLowerCase().includes(sintomasLower) || 
            emergencia.descripcion.toLowerCase().includes(sintomasLower)) {
            emergenciasEncontradas.push({ ...emergencia, id: key });
        }
        
        // Buscar en signos de reconocimiento
        if (emergencia.reconocimiento && emergencia.reconocimiento.signos) {
            const signosCoincidentes = emergencia.reconocimiento.signos.filter(signo => 
                signo.toLowerCase().includes(sintomasLower) || 
                sintomasLower.includes(signo.toLowerCase())
            );
            
            if (signosCoincidentes.length > 0) {
                emergenciasEncontradas.push({ ...emergencia, id: key, signosCoincidentes });
            }
        }
    });
    
    return emergenciasEncontradas;
}